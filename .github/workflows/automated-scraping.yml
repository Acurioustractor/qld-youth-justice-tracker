name: Automated Youth Justice Data Collection

on:
  schedule:
    # Run daily at 9 AM Brisbane time (23:00 UTC previous day)
    - cron: '0 23 * * *'
  workflow_dispatch:  # Allow manual trigger
    inputs:
      run_all:
        description: 'Run all scrapers'
        required: false
        default: 'true'
      generate_report:
        description: 'Generate weekly report'
        required: false
        default: 'false'

env:
  PYTHON_VERSION: '3.10'
  TZ: 'Australia/Brisbane'

jobs:
  scrape-data:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        
    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
          
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Set up environment
      run: |
        echo "SUPABASE_URL=${{ secrets.SUPABASE_URL }}" >> $GITHUB_ENV
        echo "SUPABASE_SERVICE_KEY=${{ secrets.SUPABASE_SERVICE_KEY }}" >> $GITHUB_ENV
        echo "DATABASE_URL=sqlite:///data/youth_justice.db" >> $GITHUB_ENV
        echo "LOG_LEVEL=INFO" >> $GITHUB_ENV
        mkdir -p data logs
        
    - name: Run scrapers
      env:
        SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
        SUPABASE_SERVICE_KEY: ${{ secrets.SUPABASE_SERVICE_KEY }}
        SMTP_SERVER: ${{ secrets.SMTP_SERVER }}
        SMTP_PORT: ${{ secrets.SMTP_PORT }}
        SMTP_USERNAME: ${{ secrets.SMTP_USERNAME }}
        SMTP_PASSWORD: ${{ secrets.SMTP_PASSWORD }}
        ALERT_EMAIL_TO: ${{ secrets.ALERT_EMAIL_TO }}
      run: |
        python scrape_data.py
        python scrape_treasury_qon.py
        
    - name: Generate report (if requested or Monday)
      if: github.event.inputs.generate_report == 'true' || github.event.schedule && format('{0:dddd}', github.event.repository.pushed_at) == 'Monday'
      env:
        REPORT_EMAIL_TO: ${{ secrets.REPORT_EMAIL_TO }}
      run: |
        python generate_report.py
        
    - name: Upload data artifacts
      uses: actions/upload-artifact@v3
      with:
        name: scraped-data-${{ github.run_number }}
        path: |
          data/raw/*.json
          data/processed/*.html
          data/processed/*.pdf
        retention-days: 30
        
    - name: Upload database
      uses: actions/upload-artifact@v3
      with:
        name: database-${{ github.run_number }}
        path: data/youth_justice.db
        retention-days: 90
        
    - name: Check for missing data
      run: |
        python -c "
        from src.automation import RTIRequestGenerator
        from src.database import init_db
        init_db()
        generator = RTIRequestGenerator()
        missing = generator.identify_missing_data()
        if missing:
            print(f'Missing data categories: {len(missing)}')
            for m in missing:
                print(f'  - {m[\"type\"]}: {m[\"reason\"]}')
        "
        
  deploy-dashboard:
    needs: scrape-data
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      
    - name: Download database artifact
      uses: actions/download-artifact@v3
      with:
        name: database-${{ github.run_number }}
        path: data/
        
    - name: Build Docker image
      run: |
        docker build -t youth-justice-tracker .
        
    - name: Deploy to cloud (example for Google Cloud Run)
      env:
        GCP_PROJECT: ${{ secrets.GCP_PROJECT }}
        GCP_SA_KEY: ${{ secrets.GCP_SA_KEY }}
      run: |
        # This is an example deployment script
        # Adjust based on your cloud provider
        
        # Authenticate to GCP
        echo "$GCP_SA_KEY" | base64 -d > gcp-key.json
        gcloud auth activate-service-account --key-file=gcp-key.json
        gcloud config set project $GCP_PROJECT
        
        # Push to Container Registry
        docker tag youth-justice-tracker gcr.io/$GCP_PROJECT/youth-justice-tracker
        docker push gcr.io/$GCP_PROJECT/youth-justice-tracker
        
        # Deploy to Cloud Run
        gcloud run deploy youth-justice-tracker \
          --image gcr.io/$GCP_PROJECT/youth-justice-tracker \
          --platform managed \
          --region australia-southeast1 \
          --allow-unauthenticated \
          --memory 2Gi \
          --cpu 2

  notify-completion:
    needs: [scrape-data, deploy-dashboard]
    runs-on: ubuntu-latest
    if: always()
    
    steps:
    - name: Send notification
      uses: 8398a7/action-slack@v3
      if: env.SLACK_WEBHOOK_URL != ''
      with:
        status: ${{ job.status }}
        text: |
          Youth Justice Data Collection completed
          Status: ${{ job.status }}
          Run: ${{ github.run_number }}
        webhook_url: ${{ secrets.SLACK_WEBHOOK_URL }}
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}